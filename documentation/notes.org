* Notes

This is a framework to analysis mdsplus data on the fuze experiment. It also includes some analysis code for a digital holographic inteferometer.


* DHI Analysis

** Reconstruction

To perform the reconstruction, first, a fresnel transformation is taken of each of the two images (images with and without a plasma).


---- Fresnel Transformation ----

The fresnel transformation starts by applying hyperbolic filter to the image. This filter will first apply a smoothing function across each row, then apply the same smoothing function down each column. There is a smoothing parameter for this, called the hyperbolicWin (defaults to 8).

Then, you multiply the image by the complex "chirp" function, and the reference beam (which is just 1.0).

Then, you perform a 2D FFT (done by a series of 1D FFT's in the C code using the GSL). The result is then has the upper left and lower right quadrants exchanged, and then the upper right and lower left quadrants exchanged. The result is the a complex matrix that represents the complex wave amplitude of the holographic reconstruction.

----------------------------------


At this point, you simply find the phase difference between the complex wave amplitudes of the holographic reconstructions with and without plasma. Then, you extract the section that corresponds to the 1st order, object wave (virtual or conjugate/diverging). The phase difference in this extracted image now represents the phase shift of the laser beam caused by the presence of the plasma.

Then, a reducing procedure is performed, where every "sampleInterval"th element is sampled and placed into a new matrix that is smaller in size.


---- Smoothing and Unwrapping Procedure -----

After that, this new, smaller, reduced size matrix representing the phase, is smoothed over and unwrapped together. This first step involves taking the sine and cosine of the phase angle. 

Then, a simple box car smoothing procedure is applied to the sine and cosine of the phase angle. This box car smooth width is set by the "boxCarSmoothWidth" parameter. The returned matrix after the box car smoothing will be smaller, because the edges that don't contain enough points for an average and will be discarded. 

Then, the smoothed sine and cosine matrices will be used to re-generate the phase, in a new, slightly smaller phase matrix. 

Finally, that new phase matrix is "unwrapped". The unwrapping procedure goes through first each column, then each row. The procedure will look for phase jumps then a threshold, set by "unwrapThresh" (defaults to 1.0 x pi), and add or subtract 2pi, depending on the sign of the jump. This will account for phase transitions that go outside of the -pi -> +pi domain of the atan function. 

At this point, the unwrapped and smoothed phase matrix has the maximum value subtracted from it at all points. This creates a zero baseline that all phases are referenced to. Later, a +1/-1 will be mulitplied by the phase when converting to density.

-----------------------------------------------


Finally, the phase is converted to plasma density by a simple formula. This matrix is now the line integrated plasma density.





** Abel Inversion

Now, the line integrated plasma density must be converted to plasma number density. This procedure is more complicated.

It will iterate through each column, which is meant to be in an orientation where the column runs in the y-direction, or perpendicular to the z-direction, the direction of the pinch. For each column, it will do the following:


------- Each Column Iteration ---------

It will pick the center to be the maximum value in the column. It will use this center value to divide the column up into a "Left" and "Right" line integrated profile. The "Left" profile is 0 -> the center value.

Then, it will iterate this center value from -"centroidNum" to +"centroidNum" around the maximum value (set to 10). For each center value, it will do the following:


------- Each Value for the "Center" ---------

It will start by dividing up the column into a "Left" and "Right" line integrated profile. The left line integrated profile is starting at the 0th pixel and increments up, while the right line integrated profile starts at the last pixel and increments down.

Then, it will subtract the minimum value from both the "Left" and "Right" line integrated profile.

Then, it will invert each "Left" and "Right" line integrated profile, to obtain a "Left" and "Right" density profile.

At this point, it will try to determine an approriate density offset for the smaller of the two profiles. To do this, it will iterate through a number of different density offsets determined by the parameters "deltaN" (set to 5E21) and "offsetIter" (set to 15). It will apply these offsets to the smaller radial density profile, and determine the sum of the square of the differences between the smaller profile, and the truncated larger profile. It will then find the density offset that minimizes this sum. This will be the density offset that it applies to the smaller of the two profiles.

Now that the density offset has been determined, the code will find the sum of the squares of the difference between the smaller density profile, and truncated larger density profile. The code will find the centroid value, or center pixel value to divide the column into a left and right line integrated density profile, that minimizes this sum. This will then be the center pixel value, or centroid value, that is used for that column.

-------------------------------------


That center value that minimizes the L2 norm between the smaller and large radial density profiles (the sum of the squares of the differences between the small and truncated large radial density profile) is what will be recorded as the actual inverted radial density profile. Remember that the appropriate density offset was also found for the smaller of the two profiles. So the "Left" and "Right" radial density profiles will be glued together, yielding the 2D inverted plasma radial density profiles.

Finally, the code will apply an axial phase correction. I'm not sure this code is necessary, but here is what it does:


------ Axial Phase Correction -----------

It will start by iterating through each column. 

Then, it will take the longer of the two profiles, and calculate the length = dy x The length of the longer profile. From this length, it will calculate a distance, 2 x sqrt(Relec^2-length^2), which is path length of the edge chord of the longer profile.

Then, it will divide the edge value of the line integrated longer profile of that column, by this distance. This value will then be an offset that is added to the both left and right radial density profiles.

